On linux

0. Install gfortran
	`sudo apt install gfortran`

1. Install anaconda
	a. get anaconda `curl -O https://repo.anaconda.com/archive/Anaconda3-2019.07-Linux-x86_64.sh`
	b. install anaconda `bash Anaconda3-2019.07-Linux-x86_64.sh`
	c. Answer "yes" to the question "Do you wish the installer to initialize Anaconda3 by running conda init?"                  

2. create a new environment
	a. conda create --name myenv
	b. conda activate myenv
	c. conda install numpy scipy matplotlib jupyter

3. Now you should have f2py. Check it!
	`which f2py` should give something like user_home_folder/anaconda3/envs/myenv/bin/f2py

4. Compile fcrystal.f90
	a. Go to the directory where fcrystal.f90 resides.
	b. `f2py -c -m fcrystal fcrystal.f90`
After executing this, I have a fresh "fcrystal.cpython-37m-x86_64-linux-gnu.so" file. 
Yours might have slightly different name, but it shoud start with fcrystal and should
be created freshly. Check the creation date with `ls -lh`

5. Test it
	a. open jupyter from the same terminal `jupyter notebook`
 	   In case no broswer opens, open it manually by copying the given web addrress.
	b. open the test.ipynb file from jupyter
	c. Run the first cell.

For later use always open terminal and execute `conda antivate myenv`, then `jupyter notebook`.


To make an executable:

0. Make sure your code can be compiled into an executable. 
	a. include a from IPython import get_ipython statement in your code
	b. get rid of all %matplotlib inline (and similar) and also any commands that print non-unicode characters to console (graphs, etc)
	c. make sure all necessary libraries are in the folder you're working in and all packages are installed
	d. including media files is problematic. if you don't necessarily need them, then comment out all lines importing and using images (background images...), etc.
		if you really need them, there is an instruction at the end

1. Install nbconvert if you haven't yet	(pip install nbconvert)

2. Make a python script .py out of your ipynb file with jupyter nbconvert --to script CrystSimGUI.ipynb

3. Install Pyinstaller (pip install pyinstaller)

4. Build the executable
	a. you will probably need to downgrade your PyQt. version 5.13.3 works for sure (pip install --user PyQt5==5.15.3)
	b. pyinstaller --onefile CrystSimGUI.py
	c. you will find your executable in a dist folder created in the folder you were working in



If you need the media files:

1. include this in your code: 
	import os
	def resource_path(relative_path):
    		base_path = getattr(sys, '_MEIPASS', os.path.dirname(os.path.abspath(__file__)))
    		return os.path.join(base_path, relative_path)
from here on jupyter notebook won't be able to run your script 

2. import images(etc...) this way:
	image_path = resource_path("picture_name.png")
	background_image=tk.PhotoImage(file = image_path)

3. do these like you normally would:
	a. jupyter nbconvert --to script CrystSimGUI.ipynb 
	b. pyinstaller --onefile CrystSimGUI.py 

4. open the .spec file
	add 'a.datas += [('picture_name.png', '/home/path/to/picture/picture_name.png', 'DATA')]' for each media file, before the line starting with "pyz = ..."

5. pyinstaller --onefile CrystSimGUI.spec


important: tkinter can't handle any file format, for images .gif is recommended (.png probably also works)


------------------------------------------------------------------------------------------------


On windows

- Install anaconda, and necessary packages (numpy, scipy, matplotlib, jupyter, ...)

- Install MinGW
	- MinGW-64 if anaconda is 64 bit (http://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Personal%20Builds/mingw-builds/installer/mingw-w64-install.exe/download)
		- Architecture: x86_64
		- Other options remain the default
	- or MinGW32 if anaconda installation is 32 bit 

- Setup environment variables
	- create "C_INCLUDE_PATH" = path_to_mingw_install\include
		- For example on my computer:
		  C:\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\include
	- append to "Path" path_to_mingw_install\bin
		- For example on my computer:
		  C:\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin

- Open Anaconda terminal
	python anaconda_path\Scripts\f2py.py -c --fcompiler=gnu95 --compiler=mingw32 -m fcrystal fcrystal.f90
	On my computer: python c:\Users\Lenovo\Anaconda3\Scripts\f2py.py -c --fcompiler=gnu95 --compiler=mingw32 -m fcrystal fcrystal.f90
	(note: on later versions of anaconda this may be f2py-script.py or f2py2e.py)
	if you get an error like unable to use mingw32 compiler in nt environment, try: python setup.py build --compiler=gcc
	(note: even if you have a 64-bit installation, with mingw64 this isn't likely to work)

- Jupyter notebook works from here on, you can open it with jupyter notebook in your environment

Making an executable:

- Make sure your code can be compiled into an executable. 
	a. include a from IPython import get_ipython statement in your code
	b. get rid of all %matplotlib inline (and similar) and also any commands that print non-unicode characters to console (graphs, etc)
	c. make sure all necessary libraries are in the folder you're working in and all packages are installed
	d. including media files is problematic. if you don't necessarily need them, then comment out all lines importing and using images (background images...), etc.
		if you really need them, the instructions for Linux on this matter are the exact same here


- jupyter nbconvert --to script CrystSimGUI.ipynb (create a .py script)

This should work with Anaconda in theory, but reality shows otherwise. best advised is to create a new user with only Python (works with 3.10.1) installed and install the necessary packages (numpy scipy matplotlib wheel pyqt5 pyinstaller pycairo cairocffi) with pip (and make sure that MinGW works and recompile the .f90 code)

It is possible that PyQt will require a downgrade, ran into this issue when I tried with PyQt4 on Windows (later 5.15.6 worked) and PyQt5 as well in Linux (5.13.5 worked) to do that:

- install pip, wheel and setuptools (you probably already have them, but in case not...)

- download a wheel file for PyQt4/your desired version of PyQt5 from here: https://www.lfd.uci.edu/~gohlke/pythonlibs/#pyqt4
	- for me, on a 64-bit Anaconda install PyQt4‑4.11.4‑cp27‑cp27m‑win_amd64.whl  was the version that worked
	- pip install c:\Users\Your_User\Downloads\PyQt4‑4.11.4‑cp27‑cp27m‑win_amd64.whl (or whatever the path is for you)
	- you may need to remove the PyQt5 you had before, this downgrade is necessary bc Python 2.7 and PyQt5 aren't compatible

- pyinstaller --onefile CrystSimGUI.py
	- your .exe will be in a dist folder. if you want to make it fully portable with the media files included, follow the instructions for doing this on Linux
